// =============================================================================
// Global Variables
// =============================================================================
// Modern Sass variables for consistent theming and configuration.

@use 'sass:math';
@use 'sass:color';
@use 'sass:map';

// =============================================================================
// Typography Variables
// =============================================================================

/// Font families
/// @type Map
$font-families: (
  'monospace': ('Consolas', 'Monaco', 'Andale Mono', 'Ubuntu Mono', monospace),
  'sans-serif': (-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif),
  'serif': (Georgia, 'Times New Roman', Times, serif),
  'display': ('SF Pro Display', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif)
);

/// Font sizes
/// @type Map
$font-sizes: (
  'xs': 0.75rem,
  // 12px
  'sm': 0.875rem,
  // 14px
  'base': 1rem,
  // 16px
  'lg': 1.125rem,
  // 18px
  'xl': 1.25rem,
  // 20px
  '2xl': 1.5rem,
  // 24px
  '3xl': 1.875rem,
  // 30px
  '4xl': 2.25rem,
  // 36px
  '5xl': 3rem,
  // 48px
  '6xl': 3.75rem // 60px
);

/// Font weights
/// @type Map
$font-weights: (
  'thin': 100,
  'extralight': 200,
  'light': 300,
  'normal': 400,
  'medium': 500,
  'semibold': 600,
  'bold': 700,
  'extrabold': 800,
  'black': 900
);

/// Line heights
/// @type Map
$line-heights: (
  'none': 1,
  'tight': 1.25,
  'snug': 1.375,
  'normal': 1.5,
  'relaxed': 1.625,
  'loose': 2
);

// =============================================================================
// Spacing Variables
// =============================================================================

/// Spacing scale
/// @type Map
$spacing: (
  '0': 0,
  'px': 1px,
  '0.5': 0.125rem,
  // 2px
  '1': 0.25rem,
  // 4px
  '1.5': 0.375rem,
  // 6px
  '2': 0.5rem,
  // 8px
  '2.5': 0.625rem,
  // 10px
  '3': 0.75rem,
  // 12px
  '3.5': 0.875rem,
  // 14px
  '4': 1rem,
  // 16px
  '5': 1.25rem,
  // 20px
  '6': 1.5rem,
  // 24px
  '7': 1.75rem,
  // 28px
  '8': 2rem,
  // 32px
  '9': 2.25rem,
  // 36px
  '10': 2.5rem,
  // 40px
  '11': 2.75rem,
  // 44px
  '12': 3rem,
  // 48px
  '14': 3.5rem,
  // 56px
  '16': 4rem,
  // 64px
  '20': 5rem,
  // 80px
  '24': 6rem,
  // 96px
  '28': 7rem,
  // 112px
  '32': 8rem,
  // 128px
  '36': 9rem,
  // 144px
  '40': 10rem,
  // 160px
  '44': 11rem,
  // 176px
  '48': 12rem,
  // 192px
  '52': 13rem,
  // 208px
  '56': 14rem,
  // 224px
  '60': 15rem,
  // 240px
  '64': 16rem,
  // 256px
  '72': 18rem,
  // 288px
  '80': 20rem,
  // 320px
  '96': 24rem // 384px
);

// =============================================================================
// Border Radius Variables
// =============================================================================

/// Border radius scale
/// @type Map
$border-radius: (
  'none': 0,
  'sm': 0.125rem,
  // 2px
  'base': 0.25rem,
  // 4px
  'md': 0.375rem,
  // 6px
  'lg': 0.5rem,
  // 8px
  'xl': 0.75rem,
  // 12px
  '2xl': 1rem,
  // 16px
  '3xl': 1.5rem,
  // 24px
  'full': 9999px
);

// =============================================================================
// Shadow Variables
// =============================================================================

/// Box shadows
/// @type Map
$shadows: (
  'sm': (0 1px 2px 0 rgba(0, 0, 0, 0.05)),
  'base': (0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)),
  'md': (0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)),
  'lg': (0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)),
  'xl': (0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)),
  '2xl': (0 25px 50px -12px rgba(0, 0, 0, 0.25)),
  'inner': (inset 0 2px 4px 0 rgba(0, 0, 0, 0.06)),
  'none': none
);

// =============================================================================
// Breakpoint Variables
// =============================================================================

/// Responsive breakpoints
/// @type Map
$breakpoints: (
  'xs': 0,
  'sm': 640px,
  'md': 768px,
  'lg': 1024px,
  'xl': 1280px,
  '2xl': 1536px
);

// =============================================================================
// Z-Index Variables
// =============================================================================

/// Z-index scale
/// @type Map
$z-index: (
  'auto': auto,
  '0': 0,
  '10': 10,
  '20': 20,
  '30': 30,
  '40': 40,
  '50': 50,
  'dropdown': 1000,
  'sticky': 1020,
  'fixed': 1030,
  'modal-backdrop': 1040,
  'modal': 1050,
  'popover': 1060,
  'tooltip': 1070
);

// =============================================================================
// Animation Variables
// =============================================================================

/// Animation durations
/// @type Map
$durations: (
  '75': 75ms,
  '100': 100ms,
  '150': 150ms,
  '200': 200ms,
  '300': 300ms,
  '500': 500ms,
  '700': 700ms,
  '1000': 1000ms
);

/// Animation timing functions
/// @type Map
$timing-functions: (
  'linear': linear,
  'in': cubic-bezier(0.4, 0, 1, 1),
  'out': cubic-bezier(0, 0, 0.2, 1),
  'in-out': cubic-bezier(0.4, 0, 0.2, 1),
  'bounce': cubic-bezier(0.68, -0.55, 0.265, 1.55),
  'elastic': cubic-bezier(0.175, 0.885, 0.32, 1.275)
);

// =============================================================================
// Code-specific Variables
// =============================================================================

/// Code block configuration
/// @type Map
$code-config: (
  'font-family': map.get($font-families, 'monospace'),
  'font-size': map.get($font-sizes, 'sm'),
  'line-height': map.get($line-heights, 'relaxed'),
  'tab-size': 4,
  'padding': map.get($spacing, '4'),
  'margin': map.get($spacing, '6') 0,
  'inline-padding': map.get($spacing, '1'),
  'border-radius': map.get($border-radius, 'lg'),
  'background-opacity': 0.05,
  'border-opacity': 0.1
);

/// Syntax highlighting configuration
/// @type Map
$syntax-config: (
  'enable-animations': true,
  'enable-transitions': true,
  'enable-hover-effects': true,
  'enable-focus-styles': true,
  'enable-selection-styles': true,
  'animation-duration': map.get($durations, '200'),
  'transition-duration': map.get($durations, '150'),
  'hover-scale': 1.02,
  'focus-scale': 1.01
);

// =============================================================================
// Theme Configuration
// =============================================================================

/// Default theme settings
/// @type Map
$theme-config: (
  'enable-dark-mode': true,
  'enable-reduced-motion': true,
  'enable-high-contrast': false,
  'enable-print-styles': true,
  'enable-focus-visible': true,
  'enable-selection-styles': true,
  'default-color-scheme': 'default',
  'fallback-color-scheme': 'light'
);

// =============================================================================
// Utility Functions for Variables
// =============================================================================

/// Get font family by name
/// @param {String} $name - Font family name
/// @return {List} Font family stack
@function get-font-family($name: 'monospace') {
  @return map.get($font-families, $name);
}

/// Get font size by name
/// @param {String} $name - Font size name
/// @return {Number} Font size value
@function get-font-size($name: 'base') {
  @return map.get($font-sizes, $name);
}

/// Get spacing by name
/// @param {String} $name - Spacing name
/// @return {Number} Spacing value
@function get-spacing($name: '4') {
  @return map.get($spacing, $name);
}

/// Get border radius by name
/// @param {String} $name - Border radius name
/// @return {Number} Border radius value
@function get-border-radius($name: 'base') {
  @return map.get($border-radius, $name);
}

/// Get shadow by name
/// @param {String} $name - Shadow name
/// @return {List} Shadow value
@function get-shadow($name: 'base') {
  @return map.get($shadows, $name);
}

/// Get breakpoint by name
/// @param {String} $name - Breakpoint name
/// @return {Number} Breakpoint value
@function get-breakpoint($name: 'md') {
  @return map.get($breakpoints, $name);
}

/// Get z-index by name
/// @param {String} $name - Z-index name
/// @return {Number} Z-index value
@function get-z-index($name: 'base') {
  @return map.get($z-index, $name);
}

/// Get duration by name
/// @param {String} $name - Duration name
/// @return {Number} Duration value
@function get-duration($name: '300') {
  @return map.get($durations, $name);
}

/// Get timing function by name
/// @param {String} $name - Timing function name
/// @return {String} Timing function value
@function get-timing-function($name: 'ease') {
  @return map.get($timing-functions, $name);
}